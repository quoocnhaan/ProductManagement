/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.component.Order.OrderDetails.OrderDetailContent.Header_Component;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.border.LineBorder;
import view.component.Btn.IconButton;
import view.component.Order.OrderDetails.OrderDetailContent.OrderProductContent_Component;
import view.component.Order.SelectingProduct.SelectingProduct_Component;

/**
 *
 * @author PC
 */
public class Header_Component extends javax.swing.JPanel {

    private IconButton browseBtn;
    private OrderProductContent_Component parent;

    public Header_Component(OrderProductContent_Component parent) {
        initComponents();
        this.parent = parent;
        setLayout(new FlowLayout(FlowLayout.RIGHT, 10, 10));
        initData();
        customComponents();
        addEvents();
        addComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void customComponents() {

    }

    private void addComponents() {
        add(browseBtn);
    }

    private void initData() {
        browseBtn = new IconButton("Browse", new ImageIcon(getClass().getResource("/icon/browse.png")), true);
    }

    private void addEvents() {
        Header_Component header_Component = this;
        browseBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JDialog addProductDialog = new JDialog((Frame) null, "Choose Product", true);  // true for modal
                addProductDialog.setSize(1180, 780);
                addProductDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);  // Close only the dialog
                addProductDialog.setLocationRelativeTo(null);  // Center the popup on screen
                //addProductDialog.setResizable(false);

                addProductDialog.setResizable(false);
                addProductDialog.setUndecorated(true);
                //addProductDialog.add(new ImportDetailsPage_Component(addProductDialog, headerTitle_Component));
                SelectingProduct_Component selectingProduct_Component = new SelectingProduct_Component(addProductDialog, header_Component);

                selectingProduct_Component.setBorder(new LineBorder(Color.GRAY, 2));
                addProductDialog.add(selectingProduct_Component);

                addProductDialog.setVisible(true);
            }
        });
    }

    public void updateDataWhenBrowse() {
        parent.updateDataWhenBrowse();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
