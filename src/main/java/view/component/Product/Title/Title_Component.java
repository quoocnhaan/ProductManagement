/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.component.Product.Title;

import controller.Session.SharedData;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import view.component.CustomComponent.CustomCheckbox;
import view.component.Product.ProductPage_Component;

/**
 *
 * @author PC
 */
public class Title_Component extends javax.swing.JPanel {

    private ProductPage_Component parent;
    private CustomCheckbox customCheckbox;

    public Title_Component(ProductPage_Component parent) {
        initComponents();
        this.parent = parent;
        setLayout(new FlowLayout(FlowLayout.LEFT, 15, 0));
        addComponents();
        addEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(248, 250, 251));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addComponents() {
        customCheckbox = new CustomCheckbox(false);
        add(customCheckbox);
        add(new ProductNameTitle_Component());
        String[] titles = {"Brand", "Quantity", "Sale Price", "Discount", "Type", "Gender"};
        for (int i = 0; i < 6; i++) {
            add(new SubTitle_Component(titles[i]));
        }
    }

    private void addEvents() {
        customCheckbox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    if (customCheckbox.isFocusOwner()) {
                        parent.changeStatusCheckbox(true);
                        parent.changeStatusEditBtn(false);
                    }
                } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                    if (customCheckbox.isFocusOwner()) {
                        parent.changeStatusCheckbox(false);
                        parent.changeStatusEditBtn(true);
                    }
                }
                parent.updateSelectedAmount();
            }
        });
    }

    public void setSelected(boolean isSelected) {
        this.customCheckbox.setSelected(isSelected);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
