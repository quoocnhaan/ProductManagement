/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.component.Product.SearchSuggestion;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JPopupMenu;
import model.Product;
import org.hibernate.Session;
import util.HibernateUtil;
import view.component.Product.SearchBar.SearchBarPanel;

/**
 *
 * @author PC
 */
public class SearchSuggestion_Component extends javax.swing.JPanel {

    /**
     * Creates new form SearchSuggestion_Component
     */
    private JPopupMenu menu;
    private PanelSearch search;
    private SearchBarPanel parent;

    public SearchSuggestion_Component(SearchBarPanel parent) {
        initComponents();
        this.parent = parent;

        setPlaceholder();

        menu = new JPopupMenu();
        search = new PanelSearch();
        search.setData(search(""));

        menu.setBorder(BorderFactory.createLineBorder(new Color(164, 164, 164)));
        menu.add(search);
        menu.setFocusable(false);
        search.addEventClick(new EventClick() {
            @Override
            public void itemClick(DataSearch data) {
                menu.setVisible(false);
                txtSearch.setText(data.getText());
                txtSearch.transferFocus();
                transferData(txtSearch.getText());
                System.out.println("Click Item : " + data.getText());
            }

            @Override
            public void itemRemove(Component com, DataSearch data) {
                search.remove(com);
                menu.setPopupSize(menu.getWidth(), (search.getItemSize() * 35) + 2);
                if (search.getItemSize() == 0) {
                    menu.setVisible(false);
                }
                System.out.println("Remove Item : " + data.getText());
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearch = new view.component.Product.SearchSuggestion.MyTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        txtSearch.setText("Find product");
        txtSearch.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtSearch.setPrefixIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search_small.png"))); // NOI18N
        txtSearch.setSelectionColor(new java.awt.Color(0, 153, 255));
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        String text = "";
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            search.keyUp();
            text = search.getSelectedText();
            txtSearch.setText(text);
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            search.keyDown();
            text = search.getSelectedText();
            txtSearch.setText(text);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            text = search.getSelectedText();
            if (!text.isBlank()) {
                txtSearch.setText(text);
            }
            menu.setVisible(false);
            txtSearch.transferFocus();
            transferData(txtSearch.getText());
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_UP && evt.getKeyCode() != KeyEvent.VK_DOWN && evt.getKeyCode() != KeyEvent.VK_ENTER) {
            String text = txtSearch.getText().trim().toLowerCase();
            search.setData(search(text));
            if (search.getItemSize() > 0) {
                //  * 2 top and bot border
                menu.show(txtSearch, 0, txtSearch.getHeight() + 5);
                menu.setPopupSize(menu.getWidth(), (search.getItemSize() * 35) + 2);
            } else {
                menu.setVisible(false);
            }
        }    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        if (search.getItemSize() > 0) {
            menu.show(txtSearch, 0, txtSearch.getHeight() + 5);
            search.clearSelected();
        }    }//GEN-LAST:event_txtSearchMouseClicked

    // database !!!!
    private List<DataSearch> search(String search) {
        List<DataSearch> resultList = new ArrayList<>();

        try (Session session = HibernateUtil.getSessionFactory().openSession()) {
            // HQL query to search for products with names similar to the search term
                                                                                                        // add isOrdering to this query
            List<Product> products = session.createQuery("FROM Product p WHERE p.name LIKE :search AND p.status IS TRUE", Product.class)
                    .setParameter("search", "%" + search + "%")
                    .setMaxResults(5)
                    .getResultList();

            for (Product product : products) {
                resultList.add(new DataSearch(product.getName(), false));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return resultList;
    }

    private void setPlaceholder() {
        String placeholder = txtSearch.getText();

        txtSearch.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (txtSearch.getText().equals(placeholder)) {
                    txtSearch.setText("");
                    txtSearch.setForeground(java.awt.Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (txtSearch.getText().isEmpty()) {
                    txtSearch.setText(placeholder);
                    txtSearch.setForeground(java.awt.Color.GRAY);
                }
            }
        });
        txtSearch.setForeground(java.awt.Color.GRAY);
    }

    public void transferData(String text) {
        parent.transferData(text);
    }

    public void reset() {
        txtSearch.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.component.Product.SearchSuggestion.MyTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    public void updateSearchData() {
        search.setData(search(""));
    }
}
