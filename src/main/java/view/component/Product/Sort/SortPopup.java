/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.component.Product.Sort;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import view.component.Btn.FilterButton;
import view.component.Btn.SortButton;
import view.component.Product.SearchBar.SearchBarPanel;

/**
 *
 * @author PC
 */
public class SortPopup extends javax.swing.JPanel {

    private SortButton none;
    private SortButton aToZ;
    private SortButton zToA;
    private SortButton lowToHigh;
    private SortButton highToLow;
    private ButtonGroup group;
    private SearchBarPanel parent;

    public SortPopup(SearchBarPanel parent) {
        initComponents();
        this.parent = parent;
        setBackground(Color.WHITE);
        setLayout(new GridLayout(0, 1, 10, 10));
        initData();
        addEvents();
        addComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void initData() {
        none = new SortButton("No Sorting Selected");
        none.setSelected(true);

        aToZ = new SortButton("Product Name A-Z");
        zToA = new SortButton("Product Name Z-A");
        lowToHigh = new SortButton("Price Low to High");
        highToLow = new SortButton("Price High to Low");

        //group = new DeselectableButtonGroup();
        group = new ButtonGroup();
    }

    private void addComponents() {
        group.add(none);
        add(none);

        group.add(aToZ);
        add(aToZ);

        group.add(zToA);
        add(zToA);

        group.add(lowToHigh);
        add(lowToHigh);

        group.add(highToLow);
        add(highToLow);
    }

    private void addEvents() {
        none.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (none.isSelected()) {
                    parent.resetSorting();
                    parent.changeColorOfSortBtn(false);
                    parent.closePopup();
                }
            }
        });

        aToZ.addItemListener(e -> {
            if (aToZ.isSelected()) {
                parent.sortByNameAscending();
                parent.changeColorOfSortBtn(true);
                parent.closePopup();
            }
        });

        zToA.addItemListener(e -> {
            if (zToA.isSelected()) {
                parent.sortByNameDescending();
                parent.changeColorOfSortBtn(true);
                parent.closePopup();
            }

        });

        lowToHigh.addItemListener(e -> {
            if (lowToHigh.isSelected()) {
                parent.sortByPriceLowToHigh();
                parent.changeColorOfSortBtn(true);
                parent.closePopup();
            }
        });

        highToLow.addItemListener(e -> {
            if (highToLow.isSelected()) {
                parent.sortByPriceHighToLow();
                parent.changeColorOfSortBtn(true);
                parent.closePopup();
            }
        });

    }

    public void reset() {
        none.setSelected(true);
        parent.changeColorOfSortBtn(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
