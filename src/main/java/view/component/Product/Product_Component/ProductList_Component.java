/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.component.Product.Product_Component;

import controller.Session.SharedData;
import java.awt.Component;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author PC
 */
public class ProductList_Component extends javax.swing.JPanel {

    //private List<Product_Component> list;
    public ProductList_Component() {
        initComponents();
        setLayout(new FlowLayout(FlowLayout.LEFT, 0, 10));
        //list = new ArrayList<>();
        //addComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void changeStatusCheckbox(boolean isChecked) {
//        for (Product_Component product_Component : list) {
//            product_Component.changeStatusCheckbox(isChecked);
//        }
        for (Component component : getComponents()) {
            if (component instanceof Product_Component) {
                ((Product_Component) component).changeStatusCheckbox(isChecked);
            }
        }
    }

    public void updateData(List<Product_Component> list) {
        removeAll();
        //this.list = list;
        for (Product_Component product_Component : list) {
            boolean isSelected = product_Component.isSelected();
            product_Component.changeColor(isSelected);
            add(product_Component);
        }
        repaint();
        revalidate();
    }

    public void changeStatusEditBtn(boolean b) {
//        for (Product_Component product_Component : list) {
//            product_Component.changeStatusEditBtn(b);
//        }

        for (Component component : getComponents()) {
            if (component instanceof Product_Component) {
                ((Product_Component) component).changeStatusEditBtn(b);
            }
        }
    }

//    public int getSelectedAmount() {
//        int count = 0;
//        for (Product_Component product_Component : list) {
//            if (!product_Component.isSelected()) {
//                count++;
//            }
//        }
//        return count;
//    }
    public boolean isSelectAll() {
        int count = 0;
//        for (Product_Component product_Component : list) {
//            if (product_Component.isSelected()) {
//                count++;
//            }
//        }
        List<Product_Component> productComponents = new ArrayList<>();
        for (Component component : getComponents()) {
            if (component instanceof Product_Component) {
                productComponents.add((Product_Component) component);
                if (((Product_Component) component).isSelected()) {
                    count++;
                }
            }
        }
        return count == productComponents.size();
    }

    public void checkStatusEditButton() {
        int count = 0;
        for (Component component : getComponents()) {
            if (component instanceof Product_Component) {
                if (((Product_Component) component).isSelected()) {
                    count++;
                }
            }
        }
        System.out.println(count);

        if (count >= 2) {
            System.out.println("hello");
            changeStatusEditButton(false);
        } else {
            System.out.println("hii");
            changeStatusEditButton(true);
        }
    }

    private void changeStatusEditButton(boolean b) {
        for (Component component : getComponents()) {
            if (component instanceof Product_Component) {
                if (!b) {
                    if (((Product_Component) component).isSelected()) {
                        ((Product_Component) component).changeStatusEditBtn(b);
                    } else {
                        ((Product_Component) component).changeStatusEditBtn(!b);
                    }
                } else {
                    ((Product_Component) component).changeStatusEditBtn(b);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
