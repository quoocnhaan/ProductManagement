/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.component.Product.Product_Component;

import controller.Session.SharedData;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author PC
 */
public class ProductList_Component extends javax.swing.JPanel {

    private List<Product_Component> list;

    public ProductList_Component() {
        initComponents();
        setLayout(new FlowLayout(FlowLayout.LEFT, 0, 10));
        list = new ArrayList<>();
        //addComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

//    private void addComponents() {
//        list = new ArrayList<>();
//        for (int i = 1; i <= 6; i++) {
//            Product_Component product_Component = new Product_Component();
//            add(product_Component);
//            list.add(product_Component);
//        }
//    }
    public void changeStatusCheckbox(boolean isChecked) {
        for (Product_Component product_Component : list) {
            product_Component.changeStatusCheckbox(isChecked);
        }
    }

    public void updateData(List<Product_Component> list) {
        removeAll();
        this.list = list;
        for (Product_Component product_Component : list) {
            add(product_Component);
        }
        repaint();
        revalidate();
    }

    public void changeStatusEditBtn(boolean b) {
        for (Product_Component product_Component : list) {
            product_Component.changeStatusEditBtn(b);
        }
    }

//    public int getSelectedAmount() {
//        int count = 0;
//        for (Product_Component product_Component : list) {
//            if (!product_Component.isSelected()) {
//                count++;
//            }
//        }
//        return count;
//    }
    public boolean isSelectAll() {
        int count = 0;
        for (Product_Component product_Component : list) {
            if (product_Component.isSelected()) {
                count++;
            }
        }
        return count == list.size();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
