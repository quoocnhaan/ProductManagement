/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.component.Importing.SearchBar;

import com.toedter.calendar.JDateChooser;
import controller.Session.SharedData;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Date;
import java.time.LocalDate;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.border.EmptyBorder;
import javax.swing.border.MatteBorder;
import view.component.Btn.IconButton;
import view.component.Importing.PaginationWithSearchBar;
import view.component.Importing.Sort.SortPopup;

/**
 *
 * @author LENOVO
 */
public class SearchBarPanel extends javax.swing.JPanel {

    private IconButton sortBtn;
    private IconButton resetBtn;
    private JPanel buttonPanel;
    private PaginationWithSearchBar parent;
    private JPopupMenu popupSort;
    private SortPopup sortPopup;
    private JDateChooser date;
    private boolean isChoosing;
    private boolean isProgrammaticChange = false;

    public SearchBarPanel(PaginationWithSearchBar parent) {
        initComponents();
        this.parent = parent;
        setLayout(new BorderLayout());
        setBackground(Color.WHITE);
        initMyComponents();
        customMyComponents();
        addEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        this.requestFocusInWindow();
    }//GEN-LAST:event_formMouseClicked

    private void initMyComponents() {
        buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 5));

        popupSort = new JPopupMenu();

        popupSort.setBackground(Color.WHITE);
        popupSort.setPreferredSize(new Dimension(200, 200));
        popupSort.setBorder(new MatteBorder(1, 1, 1, 1, new Color(230, 230, 230)));

        sortPopup = new SortPopup(this);
        popupSort.add(sortPopup);

        date = new JDateChooser();

        popupSort.setBackground(Color.WHITE);
        popupSort.setPreferredSize(new Dimension(200, 200));
        popupSort.setBorder(new MatteBorder(1, 1, 1, 1, new Color(230, 230, 230)));

        ImageIcon sortIcon = new ImageIcon(getClass().getResource("/icon/sort.png"));
        sortBtn = new IconButton("Sort by", sortIcon, true);

        ImageIcon resetIcon = new ImageIcon(getClass().getResource("/icon/reload.png"));
        resetBtn = new IconButton("Reset", resetIcon, true);
    }

    private void customMyComponents() {
        setBorder(new EmptyBorder(0, 10, 0, 10));

        buttonPanel.setBackground(Color.WHITE);

        date.setBackground(Color.white);
        date.setFont(new Font("Rotobo", Font.PLAIN, 14));
        date.setDate(null);
        date.setPreferredSize(new Dimension(150, 35));

        buttonPanel.add(resetBtn);

        buttonPanel.add(date);

        buttonPanel.add(sortBtn);

        add(buttonPanel, BorderLayout.EAST);
    }

    private void addEvents() {
        sortBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                popupSort.show(sortBtn, sortBtn.getWidth() - 200, sortBtn.getHeight() + 5);
            }
        });

        date.addPropertyChangeListener("date", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("date") && !isProgrammaticChange) {
                    // This block will only run if the date was changed by the user
                    java.util.Date selectedDate = ((com.toedter.calendar.JDateChooser) evt.getSource()).getDate();
                    if (selectedDate != null) {
                        java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());
                        //SharedData.date = sqlDate;
                        parent.sortByDate(sqlDate);
                    } else {
                        //SharedData.date = null;
                        parent.sortByDate(null);
                    }
                }
            }
        });

        resetBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                date.setDate(null);
            }
        });

    }

    public void closePopup() {
        popupSort.setVisible(false);
    }

    public void sortByPriceLowToHigh() {
        parent.sortByPriceLowToHigh();
    }

    public void sortByPriceHighToLow() {
        parent.sortByPriceHighToLow();
    }

    public void resetSorting() {
        parent.resetSorting();
    }

    public void resetSearchOptions() {
        isProgrammaticChange = true;
        date.setDate(null);
        isProgrammaticChange = false;
        sortPopup.reset();
    }

    public void changeColorOfSortBtn(boolean b) {
        sortBtn.changeColor(b);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
